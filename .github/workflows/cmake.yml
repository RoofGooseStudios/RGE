name: CMake CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  # BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        bt: [Release, Debug]
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run:   |
         if [ "$RUNNER_OS" == "Linux" ]; then
              sudo apt-get install doxygen
         elif [ "$RUNNER_OS" == "Windows" ]; then
              choco install doxygen.install
         elif [ "$RUNNER_OS" == "macOS" ]; then
              brew install doxygen
         else
              echo "$RUNNER_OS not supported"
              exit 1
         fi
      shell: bash

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.bt}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.bt}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{matrix.bt}}

